{"version":3,"file":"hydrogen.js","sourceRoot":"","sources":["../../../src/cli/models/hydrogen.ts"],"names":[],"mappings":"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","sourcesContent":["import {loadConfig} from '../utilities/load-config.js'\nimport {path, error as kitError, file} from '@shopify/cli-kit'\nimport {\n  getDependencies,\n  getPackageName,\n  PackageManager,\n  pnpmLockfile,\n  yarnLockfile,\n} from '@shopify/cli-kit/node/node-package-manager'\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */\n// @ts-ignore\nimport type {HydrogenConfig} from '@shopify/hydrogen/config'\n/* eslint-enable @typescript-eslint/ban-ts-comment */\n\nexport interface HydrogenApp {\n  name: string\n  directory: string\n  packageManager: PackageManager\n  configuration: HydrogenConfig\n  nodeDependencies: {[key: string]: string}\n  language: 'JavaScript' | 'TypeScript'\n  errors?: AppErrors\n}\n\ninterface AppLoaderConstructorArgs {\n  directory: string\n}\n\nclass AppErrors {\n  private errors: {\n    [key: string]: string\n  } = {}\n\n  addError(path: string, message: string): void {\n    this.errors[path] = message\n  }\n\n  getError(path: string): string {\n    return this.errors[path]\n  }\n\n  isEmpty() {\n    return Object.keys(this.errors).length === 0\n  }\n\n  toJSON(): string[] {\n    return Object.values(this.errors)\n  }\n}\n\nclass HydrogenAppLoader {\n  private directory: string\n  private errors: AppErrors = new AppErrors()\n\n  constructor({directory}: AppLoaderConstructorArgs) {\n    this.directory = directory\n  }\n\n  async loaded() {\n    if (!(await file.exists(this.directory))) {\n      throw new kitError.Abort(`Couldn't find directory ${this.directory}`)\n    }\n\n    const {configuration} = await this.loadConfig()\n\n    const yarnLockPath = path.join(this.directory, yarnLockfile)\n    const yarnLockExists = await file.exists(yarnLockPath)\n    const pnpmLockPath = path.join(this.directory, pnpmLockfile)\n    const pnpmLockExists = await file.exists(pnpmLockPath)\n    const packageJSONPath = path.join(this.directory, 'package.json')\n    const name = await getPackageName(packageJSONPath)\n    const nodeDependencies = await getDependencies(packageJSONPath)\n    const tsConfigExists = await file.exists(path.join(this.directory, 'tsconfig.json'))\n    const language = tsConfigExists && nodeDependencies.typescript ? 'TypeScript' : 'JavaScript'\n\n    let packageManager: PackageManager\n    if (yarnLockExists) {\n      packageManager = 'yarn'\n    } else if (pnpmLockExists) {\n      packageManager = 'pnpm'\n    } else {\n      packageManager = 'npm'\n    }\n\n    const app: HydrogenApp = {\n      name: name ?? path.basename(this.directory),\n      directory: this.directory,\n      configuration,\n      packageManager,\n      nodeDependencies,\n      language,\n    }\n\n    if (!this.errors.isEmpty()) app.errors = this.errors\n\n    return app\n  }\n\n  async loadConfig() {\n    const abortError = new kitError.Abort(`Couldn't find hydrogen configuration file`)\n\n    try {\n      const config = await loadConfig({root: this.directory})\n\n      if (!config) {\n        throw abortError\n      }\n\n      return config\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } catch (error: any) {\n      abortError.stack = error.stack\n      throw abortError\n    }\n  }\n}\n\nexport async function load(directory: string): Promise<HydrogenApp> {\n  const loader = new HydrogenAppLoader({directory})\n\n  return loader.loaded()\n}\n"]}