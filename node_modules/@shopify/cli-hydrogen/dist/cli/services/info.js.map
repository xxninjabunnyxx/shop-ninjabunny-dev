{"version":3,"file":"info.js","sourceRoot":"","sources":["../../../src/cli/services/info.ts"],"names":[],"mappings":"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","sourcesContent":["import {HydrogenApp} from '../models/hydrogen.js'\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport {HydrogenConfig} from '@shopify/hydrogen/config'\nimport {output, string, os} from '@shopify/cli-kit'\n\ninterface InfoOptions {\n  showPrivateData: boolean\n}\n\nexport function info(app: HydrogenApp, {showPrivateData}: InfoOptions): output.Message {\n  const appInfo = new HydrogenAppInfo(app)\n\n  return appInfo.output({showPrivateData})\n}\n\nconst NOT_FOUND_TEXT = output.content`${output.token.italic('Not found')}`.value\nconst NOT_CONFIGURED_TEXT = output.content`${output.token.italic('Not yet configured')}`.value\n\nclass AppInfo {\n  private app: HydrogenApp\n  constructor(app: HydrogenApp) {\n    this.app = app\n  }\n\n  output({showPrivateData}: InfoOptions): string {\n    const sections: [string, string][] = [\n      this.projectSettingsSection(),\n      this.storefrontSettingsSection({showPrivateData}),\n      this.eslintSection(),\n      this.systemInfoSection(),\n    ]\n    return sections.map((sectionContents: [string, string]) => this.section(...sectionContents)).join('\\n\\n')\n  }\n\n  projectSettingsSection(): [string, string] {\n    const title = 'Your Project'\n\n    const lines = [\n      ['Name', this.app.name],\n      ['Project location', this.app.directory],\n      ['Language', this.app.language],\n    ]\n\n    const projectInfo = this.linesToColumns(lines)\n    return [title, projectInfo]\n  }\n\n  storefrontSettingsSection({showPrivateData}: InfoOptions): [string, string] {\n    const errors: string[] = []\n    const title = 'Storefront'\n\n    if (this.app.configuration.shopify && typeof this.app.configuration.shopify === 'function') {\n      return [title, 'Storefront settings defined as a function are not supported in this command.']\n    }\n\n    const privateFields = showPrivateData ? ['storefrontToken'] : []\n\n    const fields = [\n      'storeDomain',\n      'storefrontApiVersion',\n      ...privateFields,\n    ] as unknown as keyof HydrogenConfig['shopify'][]\n\n    const storefrontInfo = this.configurationCheck(fields, this.app.configuration.shopify)\n\n    let errorContent = `\\n${errors.map(this.formattedError).join('\\n')}`\n\n    if (errorContent.trim() === '') errorContent = ''\n\n    return [title, `${this.linesToColumns(storefrontInfo)}${errorContent}`]\n  }\n\n  eslintSection(): [string, string] {\n    const errors: string[] = []\n    const title = 'ESLint'\n    const dependencyResults = this.dependencyCheck(['eslint', 'eslint-plugin-hydrogen'])\n\n    if (this.app.nodeDependencies.eslint && !this.app.nodeDependencies['eslint-plugin-hydrogen']) {\n      errors.push('Run `yarn shopify add eslint` to install and configure eslint for hydrogen')\n    }\n\n    let errorContent = `\\n${errors.map(this.formattedError).join('\\n')}`\n\n    if (errorContent.trim() === '') errorContent = ''\n\n    return [title, `${this.linesToColumns(dependencyResults)}${errorContent}`]\n  }\n\n  configurationCheck(\n    key: keyof HydrogenConfig | keyof HydrogenConfig[],\n    configObject: HydrogenConfig | HydrogenConfig['shopify'] = this.app.configuration,\n  ): string[][] {\n    const keys = Array.isArray(key) ? key : [key]\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const result = keys.reduce((acc, key) => {\n      const found = configObject[key as keyof HydrogenConfig & keyof HydrogenConfig['shopify']]\n\n      if (typeof found === 'string') {\n        const result = [string.capitalize(key.toString()), found]\n        return [...acc, result]\n      }\n\n      const result = [key, NOT_CONFIGURED_TEXT]\n      return [...acc, result]\n    }, [])\n\n    return result\n  }\n\n  dependencyCheck(dependency: string | string[]): string[][] {\n    const dependencies = Array.isArray(dependency) ? dependency : [dependency]\n\n    const result = dependencies.reduce<string[][]>((acc, dependency) => {\n      const found = this.app.nodeDependencies[dependency]\n      if (found) {\n        const result = [dependency, found]\n        return [...acc, result]\n      }\n\n      const result = [dependency, NOT_FOUND_TEXT]\n      return [...acc, result]\n    }, [])\n\n    return result\n  }\n\n  formattedError(str: string): string {\n    const [errorFirstLine, ...errorRemainingLines] = str.split('\\n')\n    const errorLines = [`! ${errorFirstLine}`, ...errorRemainingLines.map((line) => `  ${line}`)]\n    return output.content`${output.token.errorText(errorLines.join('\\n'))}`.value\n  }\n\n  systemInfoSection(): [string, string] {\n    const title = 'Tooling and System'\n    const {platform, arch} = os.platformAndArch()\n    const lines: string[][] = [\n      ...this.dependencyCheck(['@shopify/hydrogen', '@shopify/cli-hydrogen', '@shopify/cli']),\n      ['Package manager', this.app.packageManager],\n      ['OS', `${platform}-${arch}`],\n      ['Shell', process.env.SHELL || 'unknown'],\n      ['Node.js version', process.version],\n    ]\n\n    return [title, this.linesToColumns(lines)]\n  }\n\n  linesToColumns(lines: string[][]): string {\n    const widths: number[] = []\n    for (let i = 0; lines[0] && i < lines[0].length; i++) {\n      const columnRows = lines.map((line) => line[i])\n      widths.push(Math.max(...columnRows.map((row) => output.unstyled(row).length)))\n    }\n    const paddedLines = lines\n      .map((line) => {\n        return line\n          .map((col, index) => {\n            return `${col}${' '.repeat(widths[index] - output.unstyled(col).length)}`\n          })\n          .join('   ')\n          .trimEnd()\n      })\n      .join('\\n')\n    return paddedLines\n  }\n\n  section(title: string, body: string): string {\n    const formattedTitle = `${title.toUpperCase()}${' '.repeat(35 - title.length)}`\n    return output.content`${output.token.heading(formattedTitle)}\\n${body}`.value\n  }\n}\n\nclass HydrogenAppInfo extends AppInfo {}\n"]}