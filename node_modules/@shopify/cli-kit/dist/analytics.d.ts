import { Interfaces } from '@oclif/core';
interface StartOptions {
    command: string;
    args: string[];
    currentTime?: number;
    commandClass?: Interfaces.Command.Class;
}
export declare const start: ({ command, args, currentTime, commandClass }: StartOptions) => Promise<void>;
interface ReportEventOptions {
    config: Interfaces.Config;
    errorMessage?: string;
}
/**
 * Report an analytics event, sending it off to Monorail -- Shopify's internal analytics service.
 *
 * The payload for an event includes both generic data, and data gathered from installed plug-ins.
 *
 */
export declare function reportEvent(options: ReportEventOptions): Promise<void>;
export declare function getEnvironmentData(config: Interfaces.Config): {
    uname: string;
    env_ci: boolean;
    env_ci_platform: string | undefined;
    env_plugin_installed_any_custom: boolean;
    env_plugin_installed_shopify: string;
    env_shell: string;
    env_web_ide: string | undefined;
};
export {};
