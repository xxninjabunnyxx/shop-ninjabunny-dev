import { join, pathToFileURL } from './path.js';
import { debug, content } from './output.js';
const TUNNEL_PLUGINS = ['@shopify/plugin-ngrok'];
export async function lookupTunnelPlugin(plugins) {
    debug(content `Looking up the Ngrok tunnel plugin...`);
    const tunnelPlugin = plugins.find((plugin) => TUNNEL_PLUGINS.includes(plugin.name));
    if (!tunnelPlugin)
        return undefined;
    const tunnelPath = pathToFileURL(join(tunnelPlugin.root, 'dist/tunnel.js')).toString();
    return import(tunnelPath).catch(() => undefined);
}
/**
 * Convenience function to trigger a hook, and gather any successful responses. Failures are ignored.
 *
 * Responses are organised into a dictionary, keyed by plug-in name. Only plug-ins that have hooks registered for the given event, and the hooks were run successfully, are included.
 */
export async function fanoutHooks(config, event, options, timeout) {
    const res = await config.runHook(event, options, timeout);
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    return Object.fromEntries(res.successes.map(({ result, plugin }) => [plugin.name, result]));
}
//# sourceMappingURL=plugins.js.map